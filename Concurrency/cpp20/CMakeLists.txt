cmake_minimum_required(VERSION 3.5)
project(cpp20concurrency)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED True)
set(CMAKE_CXX_EXTENSIONS OFF)

if (WIN32)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W4 /FA")
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /Wall")
else()
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra")
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -fprofile-arcs -ftest-coverage")
endif()

set(CMAKE_DEBUG_POSTFIX d)
enable_testing()

add_executable(semaphore_test semaphore_test.cpp semaphore.hpp)
if (NOT WIN32)
    target_link_libraries(semaphore_test pthread)
endif()
set_target_properties(semaphore_test PROPERTIES DEBUG_POSTFIX ${CMAKE_DEBUG_POSTFIX})
add_test(NAME semaphore_test COMMAND semaphore_test)

add_executable(latch_test latch_test.cpp latch.hpp)
if (NOT WIN32)
    target_link_libraries(latch_test pthread)
endif()
set_target_properties(latch_test PROPERTIES DEBUG_POSTFIX ${CMAKE_DEBUG_POSTFIX})
add_test(NAME latch_test COMMAND latch_test)
