cmake_minimum_required(VERSION 3.5)
project(LeetcodeStudy)

set(CXX_STANDARD_VERSION 20)

if (WIN32)
    set(CXX_LATEST_VERSION_ENABLED 0)
    if (MSVC_VERSION GREATER_EQUAL "1900")
        include(CheckCXXCompilerFlag)
        CHECK_CXX_COMPILER_FLAG("/std:c++latest" _cpp_latest_flag_supported)
        if (_cpp_latest_flag_supported)
            add_compile_options("/std:c++latest")
            set(CXX_LATEST_VERSION_ENABLED 1)
        endif()
    endif()
    if (NOT ${CXX_LATEST_VERSION_ENABLED})
        set(CXX_STANDARD_VERSION 17)
    endif()
endif()
add_compile_definitions(CXX_STANDARD_VERSION=${CXX_STANDARD_VERSION})

set(CMAKE_CXX_STANDARD ${CXX_STANDARD_VERSION})
if (WIN32)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W4 /FA")
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /Wall")
else()
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3 -Wall -Wextra")
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -g -Wall -Wextra")
endif()

enable_testing()

add_executable(intervals_test intervals_test.cpp check.h)
add_test(NAME intervals_test COMMAND intervals_test)
add_executable(reverse_words_test reverse_words_test.cpp check.h)
add_test(NAME reverse_words_test COMMAND reverse_words_test)
add_executable(copy_list_with_random_pointer copy_list_with_random_pointer.cpp check.h)
add_test(NAME copy_list_with_random_pointer COMMAND copy_list_with_random_pointer)
add_executable(text_justification text_justification.cpp check.h)
add_test(NAME text_justification COMMAND text_justification)
add_executable(largest_number_test largest_number_test.cpp check.h)
add_test(NAME largest_number_test COMMAND largest_number_test)
add_executable(word_ladder_test word_ladder_test.cpp check.h)
add_test(NAME word_ladder_test COMMAND word_ladder_test)
add_executable(sliding_window_maximum sliding_window_maximum.cpp check.h)
add_test(NAME sliding_window_maximum COMMAND sliding_window_maximum)
